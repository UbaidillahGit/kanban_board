// Mocks generated by Mockito 5.3.2 from annotations
// in kanban_board/test/bloc/projects/projects_bloc_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:fpdart/fpdart.dart' as _i2;
import 'package:kanban_board/domain/projects/entities/projects.dart' as _i6;
import 'package:kanban_board/domain/projects/failure/failure.dart' as _i5;
import 'package:kanban_board/domain/projects/param/projects_param.dart' as _i7;
import 'package:kanban_board/domain/projects/projects_repo.dart' as _i3;
import 'package:kanban_board/infrastructure/local/secure_storage.dart' as _i8;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeEither_0<L, R> extends _i1.SmartFake implements _i2.Either<L, R> {
  _FakeEither_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [ProjectsRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockProjectsRepository extends _i1.Mock
    implements _i3.ProjectsRepository {
  MockProjectsRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Stream<_i2.Either<_i5.ProjectsFailure, _i6.ProjectEntities>>
      streamDetailProjects(String? id) => (super.noSuchMethod(
            Invocation.method(
              #streamDetailProjects,
              [id],
            ),
            returnValue: _i4.Stream<
                _i2.Either<_i5.ProjectsFailure, _i6.ProjectEntities>>.empty(),
          ) as _i4
              .Stream<_i2.Either<_i5.ProjectsFailure, _i6.ProjectEntities>>);
  @override
  _i4.Future<_i2.Either<_i5.ProjectsFailure, _i6.ProjectEntities>> detail(
          String? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #detail,
          [id],
        ),
        returnValue: _i4.Future<
                _i2.Either<_i5.ProjectsFailure, _i6.ProjectEntities>>.value(
            _FakeEither_0<_i5.ProjectsFailure, _i6.ProjectEntities>(
          this,
          Invocation.method(
            #detail,
            [id],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.ProjectsFailure, _i6.ProjectEntities>>);
  @override
  _i4.Future<_i2.Either<_i5.ProjectsFailure, List<_i6.ProjectEntities>>>
      listProject(String? userEmail) => (super.noSuchMethod(
            Invocation.method(
              #listProject,
              [userEmail],
            ),
            returnValue: _i4.Future<
                    _i2.Either<_i5.ProjectsFailure,
                        List<_i6.ProjectEntities>>>.value(
                _FakeEither_0<_i5.ProjectsFailure, List<_i6.ProjectEntities>>(
              this,
              Invocation.method(
                #listProject,
                [userEmail],
              ),
            )),
          ) as _i4.Future<
              _i2.Either<_i5.ProjectsFailure, List<_i6.ProjectEntities>>>);
  @override
  _i4.Future<_i2.Either<_i5.ProjectsFailure, List<_i6.CollaboratorEntities>>>
      listCollaborator(String? projectsId) => (super.noSuchMethod(
            Invocation.method(
              #listCollaborator,
              [projectsId],
            ),
            returnValue: _i4.Future<
                _i2.Either<_i5.ProjectsFailure,
                    List<_i6.CollaboratorEntities>>>.value(_FakeEither_0<
                _i5.ProjectsFailure, List<_i6.CollaboratorEntities>>(
              this,
              Invocation.method(
                #listCollaborator,
                [projectsId],
              ),
            )),
          ) as _i4.Future<
              _i2.Either<_i5.ProjectsFailure, List<_i6.CollaboratorEntities>>>);
  @override
  _i4.Future<_i2.Either<_i5.ProjectsFailure, String>> create(
          _i7.ProjecParam? projectEntities) =>
      (super.noSuchMethod(
        Invocation.method(
          #create,
          [projectEntities],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.ProjectsFailure, String>>.value(
            _FakeEither_0<_i5.ProjectsFailure, String>(
          this,
          Invocation.method(
            #create,
            [projectEntities],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.ProjectsFailure, String>>);
}

/// A class which mocks [SecureStorageRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockSecureStorageRepository extends _i1.Mock
    implements _i8.SecureStorageRepository {
  MockSecureStorageRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  void setUserDisplayName(String? displayName) => super.noSuchMethod(
        Invocation.method(
          #setUserDisplayName,
          [displayName],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void setUserEmail(String? email) => super.noSuchMethod(
        Invocation.method(
          #setUserEmail,
          [email],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void setUserPhotoUrl(String? url) => super.noSuchMethod(
        Invocation.method(
          #setUserPhotoUrl,
          [url],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void setCurrentOpenedProject(String? projectId) => super.noSuchMethod(
        Invocation.method(
          #setCurrentOpenedProject,
          [projectId],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i4.Future<String?> getUserDisplayName() => (super.noSuchMethod(
        Invocation.method(
          #getUserDisplayName,
          [],
        ),
        returnValue: _i4.Future<String?>.value(),
      ) as _i4.Future<String?>);
  @override
  _i4.Future<String?> getUserEmail() => (super.noSuchMethod(
        Invocation.method(
          #getUserEmail,
          [],
        ),
        returnValue: _i4.Future<String?>.value(),
      ) as _i4.Future<String?>);
  @override
  _i4.Future<String?> getUserPhotoUrl() => (super.noSuchMethod(
        Invocation.method(
          #getUserPhotoUrl,
          [],
        ),
        returnValue: _i4.Future<String?>.value(),
      ) as _i4.Future<String?>);
  @override
  _i4.Future<String?> getCurrentOpenedProject() => (super.noSuchMethod(
        Invocation.method(
          #getCurrentOpenedProject,
          [],
        ),
        returnValue: _i4.Future<String?>.value(),
      ) as _i4.Future<String?>);
}
